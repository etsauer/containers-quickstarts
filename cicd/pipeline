#!/bin/bash
IMAGE_NAMESPACE=openshift

deploy() {
  app_name=${1}
  deploy_templates=${2:-1}

  echo "Creating a pipeline for ${app_name} application..."
  if [ ${deploy_templates} -eq 1 ]; then
    create_or_update_from_template jenkins-slaves/templates/jenkins-slave-image-mgmt-template.json
    create_or_update_from_template cicd/jenkins-s2i/jenkins-s2i.yml \
      -v JENKINS_GIT_URL=https://github.com/redhat-cop/containers-quickstarts.git \
      -v JENKINS_GIT_CONTEXT_DIR=cicd/jenkins-s2i
    create_or_update_template cicd/pipeline-basic/generic-java-jenkins-pipeline.yml
    create_or_update_template cicd/pipeline-basic/jws30-tomcat8-deployment.yml
  else
    echo "skipping template deployment"
  fi

  # Create Projects
  oc new-project ${app_name}-dev --skip-config-write=true
  oc new-project ${app_name}-stage --skip-config-write=true
  oc new-project ${app_name}-prod --skip-config-write=true

  # Configure serviceaccount
  oc policy add-role-to-user edit system:serviceaccount:${app_name}-dev:jenkins -n ${app_name}-stage
  oc policy add-role-to-user edit system:serviceaccount:${app_name}-dev:jenkins -n ${app_name}-prod

  # Create jenkins master
  oc new-app --template=jenkins-ephemeral -p JENKINS_IMAGE_STREAM_TAG=jenkins2-s2i:latest -p NAMESPACE=${IMAGE_NAMESPACE} -n ${app_name}-dev

  # Create application deployments
  oc new-app --template=${IMAGE_NAMESPACE}/jws30-tomcat8-deployment -p APPLICATION_NAME=${app_name} -n ${app_name}-dev
  oc new-app --template=${IMAGE_NAMESPACE}/jws30-tomcat8-deployment -p APPLICATION_NAME=${app_name} -n ${app_name}-stage
  oc new-app --template=${IMAGE_NAMESPACE}/jws30-tomcat8-deployment -p APPLICATION_NAME=${app_name} -n ${app_name}-prod

  # Instantiate pipeline
  oc new-app --template=${IMAGE_NAMESPACE}/generic-java-jenkins-pipeline -p APPLICATION_NAME=${app_name} -n ${app_name}-dev

  echo "Done!"

}

create_or_update_from_template() {
  # For each of our templates we're going to first, attempt to create it, and if that fails, we'll replace it
  template=${1}
  shift
  args=${@}
  oc process -f ${template} ${args} \
    | oc create -f - -n ${IMAGE_NAMESPACE} 2>/dev/null \
    || oc process -f ${template} ${args} \
    | oc replace -f- -n ${IMAGE_NAMESPACE}
}

create_or_update_template() {
  # For each of our templates we're going to first, attempt to create it, and if that fails, we'll replace it
  template=${1}
  shift
  args=${@}
  oc create -f ${template} -n ${IMAGE_NAMESPACE} 2>/dev/null \
    || oc replace -f ${template} -n ${IMAGE_NAMESPACE}
}

cleanup() {
  app_name=${1}

  oc delete projects ${app_name}-dev ${app_name}-stage ${app_name}-prod
}

if [ "$(basename $PWD)" != "containers-quickstarts" ]; then
  echo "You must be in the 'containers-quickstarts' directory to run this script."
  exit 1
fi

method=${1}
shift
app_name=${1}
shift


while [[ $# -gt 1 ]]
do
  key="$1"

  case $key in
      -i|--image-namespace)
      IMAGE_NAMESPACE="$2"
      shift # past argument
      ;;
      *)
        # unknown option
        echo "Unknown option"
        exit 1
      ;;
  esac
  shift # past argument or value
done

${method} ${app_name}
